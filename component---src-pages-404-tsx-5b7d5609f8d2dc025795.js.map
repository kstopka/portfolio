{"version":3,"file":"component---src-pages-404-tsx-5b7d5609f8d2dc025795.js","mappings":"ouCAQA,IAAMA,EACG,CACLC,GAAI,wBACJC,GAAI,kBAHFF,EAKS,CACXC,GAAI,+FACJC,GAAI,uFA+BR,UA3B0C,WACxC,IAAQC,GAAaC,EAAAA,EAAAA,IAA2BC,EAAAA,GAAQ,CAAC,aAAjDF,SACAG,EAAuBN,EAAhBO,EAAgBP,EAE4CQ,EAAAC,GAAnCC,EAAAA,EAAAA,UAA8B,MAAK,GAApEC,EAAYH,EAAA,GAAEI,EAAeJ,EAAA,GASpC,OAPAK,EAAAA,EAAAA,WAAU,WACRC,MAAM,sBACHC,KAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,GACxBF,KAAK,SAACG,GAAI,OAAKN,EAAgBM,EAAK,GAAC,MAC/B,SAACC,GAAG,OAAKC,QAAQC,MAAM,+BAAgCF,EAAI,EACtE,EAAG,IAEER,EAGHW,EAAAA,cAACC,EAAAA,EAAM,CAACZ,aAAcA,GACpBW,EAAAA,cAAA,UAAKhB,EAAMH,IACXmB,EAAAA,cAAA,SAAIf,EAAYJ,IAChBmB,EAAAA,cAACE,EAAAA,EAAM,CACLC,QAAS,WAAF,OAAQC,EAAAA,EAAAA,UAASC,EAAAA,EAAUC,KAAKC,KAAK,EAC5CC,MAAOH,EAAAA,EAAUC,KAAKzB,MARF,IAY5B,EAIO,IAAM4B,EAAe,WAAH,OAAST,EAAAA,cAAA,aAAO,YAAiB,C","sources":["webpack://kstopka-portfolio/./src/pages/404.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport Button from \"../components/atoms/Button\";\nimport { HeadFC, PageProps, navigate } from \"gatsby\";\nimport { useContextState, IAppState, AppCtx } from \"../components/contexted\";\nimport { URL_PATHS } from \"../constants\";\nimport { PersonalInfo } from \"../types/standard\";\n\nconst TranslateNotFoundPage = {\n  title: {\n    pl: \"Strona nie znaleziona\",\n    en: \"Page not found\",\n  },\n  description: {\n    pl: \"Nie znaleziono strony, która mogła by być wyświetlona. Kliknij aby wrócić do strony głównej.\",\n    en: \"The page you are looking for could not be found. Click to go back to the home page.\",\n  },\n};\n\nconst NotFoundPage: React.FC<PageProps> = () => {\n  const { language } = useContextState<IAppState>(AppCtx, [\"language\"]);\n  const { title, description } = TranslateNotFoundPage;\n\n  const [personalInfo, setPersonalInfo] = useState<PersonalInfo | null>(null);\n\n  useEffect(() => {\n    fetch(\"/personalInfo.json\")\n      .then((res) => res.json())\n      .then((data) => setPersonalInfo(data))\n      .catch((err) => console.error(\"Failed to load personalInfo:\", err));\n  }, []);\n\n  if (!personalInfo) return null;\n\n  return (\n    <Layout personalInfo={personalInfo}>\n      <h1>{title[language]}</h1>\n      <p>{description[language]}</p>\n      <Button\n        onClick={() => navigate(URL_PATHS.home.path)}\n        label={URL_PATHS.home[language]}\n      />\n    </Layout>\n  );\n};\n\nexport default NotFoundPage;\n\nexport const Head: HeadFC = () => <title>Not found</title>;\n"],"names":["TranslateNotFoundPage","pl","en","language","useContextState","AppCtx","title","description","_useState2","_slicedToArray","useState","personalInfo","setPersonalInfo","useEffect","fetch","then","res","json","data","err","console","error","React","Layout","Button","onClick","navigate","URL_PATHS","home","path","label","Head"],"sourceRoot":""}